from sklearn.datasets import fetch_california_housing
from sklearn.preprocessing import PolynomialFeatures, StandardScaler
from sklearn.pipeline import make_pipeline

# Load California housing dataset
data = fetch_california_housing()
X = data.data
y = data.target

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Linear Regression
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)
lin_pred = lin_reg.predict(X_test)
lin_r2 = r2_score(y_test, lin_pred)

# Polynomial Regression (degree 2)
poly_pipeline = make_pipeline(PolynomialFeatures(degree=2), StandardScaler(), LinearRegression())
poly_pipeline.fit(X_train, y_train)
poly_pred = poly_pipeline.predict(X_test)
poly_r2 = r2_score(y_test, poly_pred)

# Compare results
comparison = pd.DataFrame({
    "Model": ["Linear", "Polynomial (deg=2)"],
    "R2 Score": [lin_r2, poly_r2],
    "MSE": [mean_squared_error(y_test, lin_pred), mean_squared_error(y_test, poly_pred)]
})
comparison
